var gulp = require('gulp');
var requireDir = require('require-dir');
var plugin = require('gulp-load-plugins')();
var runSequence = require('run-sequence');
var util = require('gulp-util');

// Uncomment the next line to report the Gulp execution time (for optimization, etc)
require("time-require");

// Pulling in all tasks from the tasks folder
requireDir('./gulpTasks', { recurse: true });

util.env.prod = !!util.env.prod;
global.pkg = require('./package.json');
global.env = require('./build-env');

// A code block that will be added to our minified code files.
// Gets the name and appVersion and other info from the above loaded 'package.json' file.
global.banner = util.env.banner = [
    '/*',
    ' * THIS FILE HAS BEEN GENERATED BY AN AUTOMATED TOOL.',
    ' * DO NOT MODIFY DIRECTLY. INSTEAD, MODIFY THE APPROPRIATE SOURCE CODE.',
    ' *',
    ' * <%= pkg.name %> v<%= pkg.version %>',
    ' * <%= pkg.description %>',
    ' * Development By: <%= pkg.developedBy %>',
    ' * Build Date: <%= new Date() %>',
    ' */',
    ''
].join('\n');


//https://knpuniversity.com/screencast/gulp
//https://markgoodyear.com/2014/01/getting-started-with-gulp/
//http://fettblog.eu/gulp-4-parallel-and-series/
//https://www.browsersync.io/docs/gulp/
//https://github.com/ryanbenson/Harvest/blob/master/gulpfile.js


gulp.task('default', function() {
    if (util.env.prod === true) {
        runSequence(
            'clean',
            ['buildTypeScript', 'precompileJst', 'buildStyles', 'buildMarkup'],
            'usemin'
        );
    } else {
        runSequence(
            'clean',
            ['buildTypeScript', 'precompileJst', 'buildStyles', 'buildMarkup'],
            ['connectHttp', 'watch']
        );
    }
});

gulp.task('usemin', function() {
    return gulp
        .src(env.DIR_DEST + '/*.html')
        .pipe(plugin.usemin({
            css:    [plugin.minifyCss()],
            html:   [plugin.minifyHtml({ empty: true }) ],
            js:     [plugin.uglify()],
            vendor: [plugin.uglify()]
        }))
        .pipe(plugin.header(banner, { pkg : pkg } ))
        .pipe(gulp.dest(env.DIR_DEST));
});


gulp.task('watch', function() {
    gulp.watch(env.DIR_SRC + '/assets/scripts/**/*.ts', ['buildTypeScript']);
    gulp.watch(env.DIR_SRC + '/assets/scss/**/*.scss', ['buildStyles']);
    gulp.watch(env.DIR_SRC + '/*.html', ['buildMarkup']);
});
